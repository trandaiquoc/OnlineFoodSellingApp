USE QLBH
GO
CREATE OR ALTER
PROC SP_AD_QUANLYTAIKHOAN
	@MATK VARCHAR(10)
AS
	IF (@MATK = '')
	BEGIN
		PRINT N'THÔNG TIN TRỐNG'
		RETURN 
	END
	IF NOT EXISTS (SELECT * FROM TAIKHOAN WHERE MATK = @MATK)
	BEGIN
		PRINT N'TÀI KHOẢN ' + @MATK + N' KHÔNG TỒN TẠI'
		RETURN
	END
	SELECT * FROM TAIKHOAN WHERE MATK = @MATK
GO

CREATE OR ALTER
PROC SP_AD_DANGKYNHANVIEN
	@USERID VARCHAR(100),
	@PASSWORD VARCHAR(100),
	@PASSWORDCHECK VARCHAR(100),
	@LOAITK INT
AS
BEGIN
	IF @USERID = NULL OR @PASSWORD = NULL OR @PASSWORDCHECK = NULL OR @LOAITK = NULL
	BEGIN
		PRINT N'Không nhập đầy đủ thông tin để đăng ký'
		RETURN
	END

	IF EXISTS (SELECT '1' FROM TAIKHOAN WHERE TENTK = @USERID)
	BEGIN
		PRINT N'Tên tài khoản đã tồn tại'
		RETURN
	END

	IF @PASSWORD <> @PASSWORDCHECK
	BEGIN
		PRINT N'Mật Khẩu và Nhập Lại Mật Khẩu không trùng khớp'
		RETURN
	END

	--TẠO MÃ TÀI KHOẢN
	DECLARE @MATK VARCHAR(10) = 'TK'
	WHILE @MATK = 'TK' OR @MATK IN ( SELECT MATK FROM TAIKHOAN)
	BEGIN
		 SET @MATK += CAST((FLOOR(RAND()*(100000-0+1)+0)) AS VARCHAR(8))
	END
	--TẠO MÃ CHO MỖI PHÂN HỆ
	DECLARE @MAPHANHE VARCHAR(10) = 'NV'
	WHILE (SELECT LEN(@MAPHANHE)) = 2 OR @MATK IN ( SELECT MATK FROM TAIKHOAN)
	BEGIN
		 SET @MAPHANHE += CAST((FLOOR(RAND()*(100000-0+1)+0)) AS VARCHAR(8))
	END

	--THÊM TÀI KHOẢN
	INSERT INTO TAIKHOAN VALUES(@MATK,@USERID,@PASSWORD,@LOAITK)
	EXEC SP_ADDLOGIN @USERID, @PASSWORD,'QLBH'
	--THÊM PHÂN HỆ
	INSERT INTO NHANVIEN(MANV, MATK) VALUES(@MAPHANHE, @MATK)
	IF @LOAITK = 0
		EXEC SP_ADDUSER @USERID, @MAPHANHE, 'R_ADMIN'
	ELSE
		EXEC SP_ADDUSER @USERID, @MAPHANHE, 'R_NHANVIEN'
	IF @@ERROR <> 0 
		PRINT N'Đăng ký không thành công'
	ELSE
		PRINT N'Đăng ký thành công'
END
GO

CREATE OR ALTER
PROC SP_AD_XOANHANVIEN
	@MATK VARCHAR(10)
AS 
	IF (@MATK = '')
	BEGIN
		PRINT N'THÔNG TIN TRỐNG'
		RETURN 
	END
	IF NOT EXISTS(SELECT * FROM NHANVIEN WHERE MATK = @MATK)
	BEGIN
		PRINT N'NHÂN VIÊN CÓ TÀI KHOẢN' + @MATK + N' KHÔNG TỒN TẠI'
		RETURN
	END 
	DELETE FROM NHANVIEN WHERE MATK = @MATK

	DELETE FROM TAIKHOAN
	WHERE MATK = @MATK
GO
--KHOÁ TK
CREATE OR ALTER
PROC SP_AD_KHOA
	@MATK VARCHAR(10)
AS
	IF (@MATK = '')
	BEGIN
		PRINT N'THÔNG TIN TRỐNG'
		RETURN 
	END
	IF NOT EXISTS (SELECT * FROM TAIKHOAN WHERE MATK = @MATK)
	BEGIN
		PRINT N'TÀI KHOẢN ' + @MATK + N' KHÔNG TỒN TẠI'
		RETURN
	END
	DECLARE @LOAITK INT = (SELECT LOAITK FROM TAIKHOAN WHERE MATK = @MATK)
	DECLARE @MAPHANHE VARCHAR(10)
	IF @LOAITK = 1
	BEGIN
		SET @MAPHANHE = (SELECT MANV FROM NHANVIEN WHERE MATK = @MATK)
		EXEC SP_DROPROLEMEMBER 'R_NHANVIEN', @MAPHANHE
	END
	ELSE IF @LOAITK = 2
	BEGIN
		SET @MAPHANHE = (SELECT MADT FROM DOITAC WHERE MATK = @MATK)
		EXEC SP_DROPROLEMEMBER 'R_DOITAC', @MAPHANHE
	END
	ELSE IF @LOAITK = 3
	BEGIN
		SET @MAPHANHE = (SELECT MAKH FROM KHACHHANG WHERE MATK = @MATK)
		EXEC SP_DROPROLEMEMBER 'R_KHACHHANG', @MAPHANHE
	END
	ELSE
	BEGIN
		SET @MAPHANHE = (SELECT MATX FROM TAIXE WHERE MATK = @MATK)
		EXEC SP_DROPROLEMEMBER 'R_TAIXE', @MAPHANHE
	END
GO

--KÍCH HOẠT TK
CREATE OR ALTER
PROC SP_AD_KICHHOAT
	@MATK VARCHAR(10)
AS
	IF (@MATK = '')
	BEGIN
		PRINT N'THÔNG TIN TRỐNG'
		RETURN 
	END
	IF NOT EXISTS (SELECT * FROM TAIKHOAN WHERE MATK = @MATK)
	BEGIN
		PRINT N'TÀI KHOẢN ' + @MATK + N' KHÔNG TỒN TẠI'
		RETURN
	END
	DECLARE @LOAITK INT = (SELECT LOAITK FROM TAIKHOAN WHERE MATK = @MATK)
	DECLARE @MAPHANHE VARCHAR(10)
	IF @LOAITK = 1
	BEGIN
		SET @MAPHANHE = (SELECT MANV FROM NHANVIEN WHERE MATK = @MATK)
		EXEC SP_ADDROLEMEMBER 'R_NHANVIEN', @MAPHANHE
	END
	ELSE IF @LOAITK = 2
	BEGIN
		SET @MAPHANHE = (SELECT MADT FROM DOITAC WHERE MATK = @MATK)
		EXEC SP_ADDROLEMEMBER 'R_DOITAC', @MAPHANHE
	END
	ELSE IF @LOAITK = 3
	BEGIN
		SET @MAPHANHE = (SELECT MAKH FROM KHACHHANG WHERE MATK = @MATK)
		EXEC SP_ADDROLEMEMBER 'R_KHACHHANG', @MAPHANHE
	END
	ELSE
	BEGIN
		SET @MAPHANHE = (SELECT MATX FROM TAIXE WHERE MATK = @MATK)
		EXEC SP_ADDROLEMEMBER 'R_TAIXE', @MAPHANHE
	END
GO

--KÍCH HOẠT TK
CREATE OR ALTER
PROC SP_AD_XEMTAIKHOANDADUOCKICHHOAT
	@MATK VARCHAR(10)
AS
	IF (@MATK = '')
	BEGIN
		PRINT N'THÔNG TIN TRỐNG'
		RETURN 
	END
	IF NOT EXISTS (SELECT * FROM TAIKHOAN WHERE MATK = @MATK)
	BEGIN
		PRINT N'TÀI KHOẢN ' + @MATK + N' KHÔNG TỒN TẠI'
		RETURN
	END

	DECLARE @LOAITK INT = (SELECT LOAITK FROM TAIKHOAN WHERE MATK = @MATK)
	DECLARE @MAPHANHE VARCHAR(10)
	IF @LOAITK = 0
	BEGIN
		SET @MAPHANHE = (SELECT MANV FROM NHANVIEN WHERE MATK = @MATK)
	END
	ELSE IF @LOAITK = 1
	BEGIN
		SET @MAPHANHE = (SELECT MANV FROM NHANVIEN WHERE MATK = @MATK)
	END
	ELSE IF @LOAITK = 2
	BEGIN
		SET @MAPHANHE = (SELECT MADT FROM DOITAC WHERE MATK = @MATK)
	END
	ELSE IF @LOAITK = 3
	BEGIN
		SET @MAPHANHE = (SELECT MAKH FROM KHACHHANG WHERE MATK = @MATK)
	END
	ELSE
	BEGIN
		SET @MAPHANHE = (SELECT MATX FROM TAIXE WHERE MATK = @MATK)
	END
	IF @MAPHANHE IN (SELECT mp.name as database_user FROM sys.database_role_members drm 
					JOIN sys.database_principals rp ON (drm.role_principal_id = rp.principal_id)
					JOIN sys.database_principals mp ON (drm.member_principal_id = mp.principal_id))
	BEGIN
		SELECT 1
	END
	ELSE 
	BEGIN
		SELECT 0
	END
GO
CREATE OR ALTER
PROC SP_AD_NV_CAPNHATTHONGTINCHITIET
	@MANV VARCHAR(10),
	@TEN NVARCHAR(100),
	@EMAIL VARCHAR(100),
	@SDT VARCHAR(20),
	@AD BIT
AS 
	IF (@AD <> 0 OR @AD <> 1)
	BEGIN
		PRINT N'GIÁ TRỊ ADMIN PHẢI LÀ 0 HOẶC 1'
		RETURN 
	END
	IF (SELECT ISNUMERIC(@SDT)) = 0
	BEGIN
		PRINT N'Số Điện Thoại chỉ có số'
		RETURN
	END
	IF NOT EXISTS(SELECT * FROM NHANVIEN WHERE MANV = @MANV)
	BEGIN
		PRINT N'NHÂN VIÊN ' + @MANV + N' TỒN TẠI'
		RETURN
	END 
	UPDATE NHANVIEN
	SET TEN = @TEN,
	    EMAIL = @EMAIL,
	    SDT = @SDT,
	    AD = @AD
	WHERE MANV = @MANV
GO

--Xem danh sách hợp đồng chưa duyệt của đối tác
CREATE OR ALTER 
PROC SP_NV_XEMHOPDONGCHUADUYET
AS
	SELECT HD.MAHD, HD.MADT, DT.TENQUAN, DT.NGUOIDAIDIEN, DT.SLCUAHANG, DT.LOAIAMTHUC FROM HOPDONG HD JOIN DOITAC DT ON DT.MADT = HD.MADT WHERE TINHTRANG = N'Chưa Duyệt'
GO

--CẬP NHẬT HỢP ĐỒNG
CREATE OR ALTER 
PROC SP_NV_CAPNHATHOPDONG
	@MAHD VARCHAR(10),
	@MANV VARCHAR(10),
	@TINHTRANG NVARCHAR(100),
	@NBD DATE,
	@NKT DATE,
	@PTHH FLOAT
AS
	IF NOT EXISTS(SELECT * FROM HOPDONG WHERE MAHD = @MAHD)
	BEGIN
		PRINT N'HỢP ĐỒNG ' + @MAHD + N' KHÔNG TỒN TẠI'
		RETURN
	END

	UPDATE HOPDONG 
	SET TINHTRANG = @TINHTRANG,
		NGAYBATDAU = @NBD,
		NGAYKETTHUC = @NKT,
		PHANTRAMHOAHONG = @PTHH,
		NVDUYET = @MANV
	WHERE MAHD = @MAHD
GO

--DUYỆT HỢP ĐỒNG
CREATE OR ALTER 
PROC SP_NV_DUYETHOPDONG
	@MAHD VARCHAR(10),
	@MANV VARCHAR(10)
AS
	IF NOT EXISTS(SELECT * FROM HOPDONG WHERE MAHD = @MAHD)
	BEGIN
		PRINT N'HỢP ĐỒNG ' + @MAHD + N' KHÔNG TỒN TẠI'
		RETURN
	END

	UPDATE HOPDONG 
	SET TINHTRANG = N'Đã Duyệt',
		NGAYBATDAU = GETDATE(),
		NVDUYET = @MANV
	WHERE MAHD = @MAHD
GO
--TÁI KÝ HỢP ĐỒNG
CREATE OR ALTER 
PROC SP_NV_TAIKYHOPDONG
	@MAHD VARCHAR(10),
	@MANV VARCHAR(10)
AS
	IF NOT EXISTS(SELECT * FROM HOPDONG WHERE MAHD = @MAHD)
	BEGIN
		PRINT N'HỢP ĐỒNG ' + @MAHD + N' KHÔNG TỒN TẠI'
		RETURN
	END

	UPDATE HOPDONG 
	SET TINHTRANG = N'Tái Ký',
		NGAYBATDAU = GETDATE(),
		NVDUYET = @MANV
	WHERE MAHD = @MAHD
GO
--Xem hợp đông khi sắp hết hợp đồng
CREATE OR ALTER 
PROC SP_NV_XEMHOPDONGSAPHETHAN
	@MAHD VARCHAR(10)
AS
	IF (@MAHD = '')
	BEGIN
		PRINT N'THÔNG TIN KHÔNG ĐƯỢC RỖNG'
		RETURN
	END
	IF NOT EXISTS(SELECT * FROM HOPDONG WHERE MAHD = @MAHD)
	BEGIN
		PRINT N'HỢP ĐỒNG ' + @MAHD + N' KHÔNG TỒN TẠI'
		RETURN
	END 
	SELECT * FROM HOPDONG WHERE DATEDIFF(DAY,GETDATE(), NGAYKETTHUC)<=30
GO

--Xem danh sách hợp đồng đã lập của đối tác
CREATE OR ALTER 
PROC SP_NV_XEMHOPDONGDADUYET
	@MANV VARCHAR(10)
AS
	SELECT HD.*, DT.TENQUAN, DT.MASOTHUE, DT.DIACHITRUSOCHINH, DT.MASOTHUE, DT.NGUOIDAIDIEN, DT.SLCUAHANG FROM HOPDONG HD JOIN DOITAC DT ON HD.MADT = DT.MADT
	WHERE NVDUYET = @MANV AND (TINHTRANG = N'Đã Duyệt' OR TINHTRANG = N'Tái Ký')
GO

--XOÁ HỢP ĐỒNG - TỪ CHỐI
CREATE OR ALTER 
PROC SP_NV_XOAHOPDONG
	@MAHD VARCHAR(10)
AS
	IF (@MAHD = '')
	BEGIN
		PRINT N'THÔNG TIN KHÔNG ĐƯỢC RỖNG'
		RETURN
	END
	IF NOT EXISTS(SELECT * FROM HOPDONG WHERE MAHD = @MAHD)
	BEGIN
		PRINT N'HỢP ĐỒNG ' + @MAHD + N' KHÔNG TỒN TẠI'
		RETURN
	END 
	DELETE FROM HOPDONG
	WHERE MAHD = @MAHD
GO